import { MigrationInterface, QueryRunner } from "typeorm";

export class AutoGeneratedMigration1731668222041 implements MigrationInterface {
    name = 'AutoGeneratedMigration1731668222041'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "userDetails" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "firstName" character varying(50), "lastName" character varying(50), "isActive" boolean NOT NULL DEFAULT true, "profilePictureUrl" text, "address" jsonb, "latitude" numeric(10,6), "longitude" numeric(10,6), "bio" text, "skills" character varying array, "rating" integer NOT NULL DEFAULT '0', "reviewCount" integer NOT NULL DEFAULT '0', "userId" uuid, CONSTRAINT "REL_bc921f94cf80b18caec3175158" UNIQUE ("userId"), CONSTRAINT "PK_35f9ec44d0772d64d68f5417c6b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "roles" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "description" text, "isActive" boolean NOT NULL DEFAULT true, CONSTRAINT "UQ_648e3f5447f725579d7d4ffdfb7" UNIQUE ("name"), CONSTRAINT "PK_c1433d71a4838793a49dcad46ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "userToRole" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "isActive" boolean NOT NULL DEFAULT true, "assignedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_237d09ee0e67dca5682c3f4fd77" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."user_usertype_enum" AS ENUM('customer', 'professional')`);
        await queryRunner.query(`CREATE TABLE "user" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying(100) NOT NULL, "isEmailVerified" boolean NOT NULL DEFAULT false, "username" character varying(100) NOT NULL, "password" character varying(255), "provider" character varying NOT NULL DEFAULT 'email', "socialId" character varying, "userType" "public"."user_usertype_enum", "isAdmin" boolean NOT NULL DEFAULT false, "isActive" boolean NOT NULL DEFAULT true, "phoneNumber" character varying(20), "isPhoneVerified" boolean NOT NULL DEFAULT false, "verificationCode" character varying, "verificationCodeExpiresAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "detailsId" uuid, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "UQ_78a916df40e02a9deb1c4b75edb" UNIQUE ("username"), CONSTRAINT "REL_4c62c8388460a107d0f450f9e0" UNIQUE ("detailsId"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_e12875dfb3b1d92d7d7c5377e2" ON "user" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_78a916df40e02a9deb1c4b75ed" ON "user" ("username") `);
        await queryRunner.query(`CREATE TABLE "subscriptionPlans" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(100) NOT NULL, "description" text, "price" double precision NOT NULL, "discountedPrice" double precision, "duration" integer NOT NULL, "features" text, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_76744c4a4dbbb6303cc249e2b1d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."userSubscriptionPlans_status_enum" AS ENUM('active', 'canceled', 'expired')`);
        await queryRunner.query(`CREATE TABLE "userSubscriptionPlans" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "startDate" date NOT NULL, "endDate" date, "status" "public"."userSubscriptionPlans_status_enum" NOT NULL DEFAULT 'active', "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_3fce7926d544fa5753665b9965c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "userDetails" ADD CONSTRAINT "FK_bc921f94cf80b18caec31751583" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "userToRole" ADD CONSTRAINT "FK_237d09ee0e67dca5682c3f4fd77" FOREIGN KEY ("id") REFERENCES "roles"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "userToRole" ADD CONSTRAINT "FK_237d09ee0e67dca5682c3f4fd78" FOREIGN KEY ("id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_4c62c8388460a107d0f450f9e0c" FOREIGN KEY ("detailsId") REFERENCES "userDetails"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "userSubscriptionPlans" ADD CONSTRAINT "FK_3fce7926d544fa5753665b9965c" FOREIGN KEY ("id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "userSubscriptionPlans" ADD CONSTRAINT "FK_3fce7926d544fa5753665b9965d" FOREIGN KEY ("id") REFERENCES "subscriptionPlans"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "userSubscriptionPlans" DROP CONSTRAINT "FK_3fce7926d544fa5753665b9965c"`);
        await queryRunner.query(`ALTER TABLE "userSubscriptionPlans" DROP CONSTRAINT "FK_3fce7926d544fa5753665b9965c"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_4c62c8388460a107d0f450f9e0c"`);
        await queryRunner.query(`ALTER TABLE "userToRole" DROP CONSTRAINT "FK_237d09ee0e67dca5682c3f4fd77"`);
        await queryRunner.query(`ALTER TABLE "userToRole" DROP CONSTRAINT "FK_237d09ee0e67dca5682c3f4fd77"`);
        await queryRunner.query(`ALTER TABLE "userDetails" DROP CONSTRAINT "FK_bc921f94cf80b18caec31751583"`);
        await queryRunner.query(`DROP TABLE "userSubscriptionPlans"`);
        await queryRunner.query(`DROP TYPE "public"."userSubscriptionPlans_status_enum"`);
        await queryRunner.query(`DROP TABLE "subscriptionPlans"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_78a916df40e02a9deb1c4b75ed"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e12875dfb3b1d92d7d7c5377e2"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TYPE "public"."user_usertype_enum"`);
        await queryRunner.query(`DROP TABLE "userToRole"`);
        await queryRunner.query(`DROP TABLE "roles"`);
        await queryRunner.query(`DROP TABLE "userDetails"`);
    }

}
